# Generated by Django 3.2.9 on 2025-03-26 02:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MyExchanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('exchange', models.CharField(choices=[('binance', 'Binance')], default='hyper_liquid', max_length=64, verbose_name='Exchange')),
                ('exchange_balance', models.FloatField(default=0.0, verbose_name='Exchange Balance')),
                ('name', models.CharField(default='', max_length=128, verbose_name='Exchange Name')),
                ('api_key', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='API key')),
                ('api_secret', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='API Secret')),
                ('api_password', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='API Password')),
                ('wallet_address', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='Wallet Address')),
                ('latest_updated', models.DateTimeField(blank=True, null=True, verbose_name='Latest Updated')),
                ('status', models.CharField(choices=[('authenticated', 'Authenticated'), ('unauthenticated', 'Unauthenticated')], default='unauthenticated', max_length=64, verbose_name='Status')),
                ('restrictions', models.TextField(blank=True, null=True, verbose_name='Restrictions')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_exchange', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'My Exchanges',
                'verbose_name_plural': 'My Exchanges',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Bots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(default='', max_length=250, verbose_name='Bot Name')),
                ('status', models.CharField(choices=[('on', 'ON'), ('off', 'OFF'), ('deleting', 'DELETING')], default='off', max_length=32, verbose_name='Status')),
                ('telegram_channel', models.CharField(default='', max_length=250, verbose_name='Telegram Channel')),
                ('task_id', models.CharField(blank=True, max_length=512, null=True, verbose_name='Task Id')),
                ('my_exchange', models.ForeignKey(help_text='Select your exchange credential', on_delete=django.db.models.deletion.CASCADE, to='trade_bot.myexchanges', verbose_name='My Exchange')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_bots', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Bots',
                'verbose_name_plural': 'Bots',
                'ordering': ['-created'],
            },
        ),
        migrations.AddIndex(
            model_name='myexchanges',
            index=models.Index(fields=['api_key'], name='trade_bot_m_api_key_f8608c_idx'),
        ),
        migrations.AddIndex(
            model_name='myexchanges',
            index=models.Index(fields=['name'], name='trade_bot_m_name_36dcbc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='myexchanges',
            unique_together={('user', 'exchange', 'name', 'api_password', 'wallet_address')},
        ),
        migrations.AddIndex(
            model_name='bots',
            index=models.Index(fields=['name'], name='trade_bot_b_name_3bd3f7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bots',
            unique_together={('user', 'name')},
        ),
    ]
